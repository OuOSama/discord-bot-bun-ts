{
  "Create Slash Command": {
    "prefix": "djs-slash-command",
    "body": [
      "import {",
      "  ChatInputCommandInteraction,",
      "  MessageFlags,",
      "  SlashCommandBuilder,",
      "} from 'discord.js'",
      "import type { Command } from '../types'",
      "",
      "/**",
      " * A basic \"ping\" command to check bot responsiveness.",
      " * - When executed, it replies with \"Pong!\".",
      " */",
      "export default {",
      "  // 🏗️ Define the command structure using SlashCommandBuilder",
      "  cooldown: 5,",
      "  data: new SlashCommandBuilder()",
      "    .setName('ping') // Command name: /ping",
      "    .setDescription('Return pong!'), // Command description",
      "",
      "  // 🎯 Command execution logic",
      "  execute: async (interaction: ChatInputCommandInteraction) => {",
      "    await interaction.reply({",
      "      content: 'Pong!',",
      "      flags: MessageFlags.Ephemeral,",
      "    }) // Reply with \"Pong!\" when the command is used",
      "  },",
      "} satisfies Command // Ensures the object conforms to the Command interface",
      "",
    ],
    "description": "Create Slash Command",
  },
  "Create Bot Event": {
    "prefix": "djs-event",
    "body": [
      "import { Client, Events } from 'discord.js'",
      "import type { Event } from '@type/index' // Import type from \"src/types/index\"",
      "",
      "export default {",
      "  name: Events.ClientReady, // Replace Event name with Your interested  Event 🟢",
      "  once: true, // This event will trigger only once ⏳",
      "  execute: async (client: Client) => {",
      "    // When the bot is ready 🛠️",
      "    console.log(`${client.user?.displayName ?? 'Bot'} is ready! 🚀`) // Log the message when the bot is ready",
      "  },",
      "} satisfies Event // Ensures the object conforms to the Event interface ✅",
      "",
    ],
    "description": "Create Bot Event",
  },
}
